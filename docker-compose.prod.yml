#배포용, for production
version: "3"


services:
  mysqldb:
#    image: arm64v8/mysql:8.0.30
    build: ./db
    volumes:
          - mysql_data:/var/lib/mysql
    env_file:
      - ./db/.env.db
#    environment:
#      MYSQL_DATABASE: "smtm"
#      MYSQL_PASSWORD: "3690"
#      MYSQL_ROOT_PASSWORD: "3690"

    ports:
      - "3306:3306"
    container_name: mysqldb

  backend:
    build:
      context: ./backend
      args:
        DJANGO_ALLOWED_HOSTS: "*"
        DJANGO_SECRET_KEY: "*"
        DJANGO_CORS_ORIGIN_WHITELIST: "*"
    command: gunicorn backend.wsgi --bind 0.0.0.0:8000
    ports:
      - "8000:8000"
    volumes:
      - static_volume:/backend/sltaticfies
      - media_volume:/backend/mediafiles
      - ./backend/:/backend/
    expose:
      - "8000"
    env_file:
      - ./db/.env.prod
    depends_on:
      - mysqldb

  nginx:
    build: ./nginx
    ports:
      - "80:8080"
    volumes:
      - static_volume:/backend/staticfiles
      - media_volume:/backend/mediafiles
#      - build_folder:/var/www/frontend
    depends_on:
      - backend
#      - frontend
volumes:
  mysql_data:
  static_volume:
  media_volume:
  build_folder:


#  frontend:
#    build:
#      context: ./frontend
#      args:
#        API_URL: "*"
#    environment:
#      - REACT_APP_BACKEND_URL=http://localhost
#    volumes:
#      - ./frontend/:/frontend
#      - build_folder:/frontend/build
#      - ./frontend/node_modules/:/frontend/node_modules
#    tty: true
#
  # nginx 컨테이너(서버)
#  nginx:
#    build: ./nginx
#    ports:
#      - 80:8080
#    volumes:
#      - static_volume:/backend/staticfiles
#      - media_volume:/backend/mediafiles
#      - build_folder:/var/www/frontend
#    depends_on:
#      - backend
#      - frontend

# 컨테이너 내려도 데이터 유지되도록 함
#volumes:
#  postgres_data:
#  static_volume:
#  media_volume:
#  build_folder: